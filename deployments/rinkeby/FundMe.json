{
  "address": "0xA7937247Cad1c35Dbe2a4a3597E1525b4f2783f9",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVersion",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x7dff4372dfed40042f9a99d29dc79bbf694ac23addb6c6f7474e100f28adbec4",
  "receipt": {
    "to": null,
    "from": "0x77BD000Fd6a76B0b6CE448fF89c5998cAf0fF768",
    "contractAddress": "0xA7937247Cad1c35Dbe2a4a3597E1525b4f2783f9",
    "transactionIndex": 22,
    "gasUsed": "954030",
    "logsBloom": "0x
    "blockHash": "0x074ff6d5a103e806e2b2c1f9ae46bf81e6a7ede4a5c1a1256bb31fae96ec46cc",
    "transactionHash": "0x7dff4372dfed40042f9a99d29dc79bbf694ac23addb6c6f7474e100f28adbec4",
    "logs": [],
    "blockNumber": 10822548,
    "cumulativeGasUsed": "8114891",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x8A753747A1Fa494EC906cE90E9f37563A8AF630e"
  ],
  "numDeployments": 1,
  "solcInputHash": "140d94c1e197c94668d61844a01d5e28",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror NotOwner();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    mapping(address => uint256) public addressToAmountFunded;\\n    address[] public funders;\\n\\n    // Could we make this constant?  /* hint: no! We should make it immutable! */\\n    address public /* immutable */ i_owner;\\n    uint256 public constant MINIMUM_USD = 50 * 10 ** 18;\\n    \\n    AggregatorV3Interface public priceFeed;\\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    function fund() public payable {\\n        require(msg.value.getConversionRate(priceFeed) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        addressToAmountFunded[msg.sender] += msg.value;\\n        funders.push(msg.sender);\\n    }\\n    \\n    function getVersion() public view returns (uint256){\\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(0x8A753747A1Fa494EC906cE90E9f37563A8AF630e);\\n        return priceFeed.version();\\n    }\\n    \\n    modifier onlyOwner {\\n        // require(msg.sender == owner);\\n        if (msg.sender != i_owner) revert NotOwner();\\n        _;\\n    }\\n    \\n    function withdraw() payable onlyOwner public {\\n        for (uint256 funderIndex=0; funderIndex < funders.length; funderIndex++){\\n            address funder = funders[funderIndex];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n        funders = new address[](0);\\n        // // transfer\\n        // payable(msg.sender).transfer(address(this).balance);\\n        // // send\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"Send failed\\\");\\n        // call\\n        (bool callSuccess, ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n    // Explainer from: https://solidity-by-example.org/fallback/\\n    // Ether is sent to contract\\n    //      is msg.data empty?\\n    //          /   \\\\ \\n    //         yes  no\\n    //         /     \\\\\\n    //    receive()?  fallback() \\n    //     /   \\\\ \\n    //   yes   no\\n    //  /        \\\\\\n    //receive()  fallback()\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n}\",\"keccak256\":\"0x9bc7bf2386c4a9f26cc6b4bb203c60b0fb7131927aa5e40d93a1a89e5fc98f60\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"pragma solidity ^0.8.8;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\n// Why is this a library and not abstract?\\r\\n// Why not an interface?\\r\\nlibrary PriceConverter {\\r\\n    // We could make this public, but then we'd have to deploy it\\r\\n    function getPrice(AggregatorV3Interface priceFeed)\\r\\n        internal\\r\\n        view\\r\\n        returns (uint256)\\r\\n    {\\r\\n        // Rinkeby ETH / USD Address\\r\\n        // https://docs.chain.link/docs/ethereum-addresses/\\r\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\r\\n        // ETH/USD rate in 18 digit\\r\\n        return uint256(answer * 10000000000);\\r\\n    }\\r\\n\\r\\n    // 1000000000\\r\\n    function getConversionRate(\\r\\n        uint256 ethAmount,\\r\\n        AggregatorV3Interface priceFeed\\r\\n    ) internal view returns (uint256) {\\r\\n        uint256 ethPrice = getPrice(priceFeed);\\r\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\r\\n        // the actual ETH/USD conversation rate, after adjusting the extra 0s.\\r\\n        return ethAmountInUsd;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x9530997691c2a03847df08e479851b2443268c919683bef3bdb92c8f4b713b51\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620010e3380380620010e383398181016040528101906200003791906200012a565b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200015c565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000f282620000c5565b9050919050565b6200010481620000e5565b81146200011057600080fd5b50565b6000815190506200012481620000f9565b92915050565b600060208284031215620001435762000142620000c0565b5b6000620001538482850162000113565b91505092915050565b610f77806200016c6000396000f3fe60806040526004361061007f5760003560e01c8063741bef1a1161004e578063741bef1a14610135578063b60d428814610160578063dba6335f1461016a578063dc0d3dff146101955761008e565b80630d8e6e2c146100985780633ccfd60b146100c35780633e47d6f3146100cd5780636b69a5921461010a5761008e565b3661008e5761008c6101d2565b005b6100966101d2565b005b3480156100a457600080fd5b506100ad61030c565b6040516100ba9190610838565b60405180910390f35b6100cb6103aa565b005b3480156100d957600080fd5b506100f460048036038101906100ef91906108b6565b6105ec565b6040516101019190610838565b60405180910390f35b34801561011657600080fd5b5061011f610604565b60405161012c9190610838565b60405180910390f35b34801561014157600080fd5b5061014a610611565b6040516101579190610942565b60405180910390f35b6101686101d2565b005b34801561017657600080fd5b5061017f610637565b60405161018c919061096c565b60405180910390f35b3480156101a157600080fd5b506101bc60048036038101906101b791906109b3565b61065d565b6040516101c9919061096c565b60405180910390f35b6802b5e3af16b1880000610211600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461069c90919063ffffffff16565b1015610252576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024990610a3d565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102a09190610a8c565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600080738a753747a1fa494ec906ce90e9f37563a8af630e90508073ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b15801561036c57600080fd5b505afa158015610380573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103a49190610af7565b91505090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610431576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156104dc5760006001828154811061045757610456610b24565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806104d490610b53565b915050610434565b50600067ffffffffffffffff8111156104f8576104f7610b9c565b5b6040519080825280602002602001820160405280156105265781602001602082028036833780820191505090505b506001908051906020019061053c929190610778565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161056390610bfc565b60006040518083038185875af1925050503d80600081146105a0576040519150601f19603f3d011682016040523d82523d6000602084013e6105a5565b606091505b50509050806105e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e090610c5d565b60405180910390fd5b50565b60006020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001818154811061066d57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806106a8836106d8565b90506000670de0b6b3a764000085836106c19190610c7d565b6106cb9190610d06565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561072157600080fd5b505afa158015610735573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107599190610daf565b5050509150506402540be400816107709190610e2a565b915050919050565b8280548282559060005260206000209081019282156107f1579160200282015b828111156107f05782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610798565b5b5090506107fe9190610802565b5090565b5b8082111561081b576000816000905550600101610803565b5090565b6000819050919050565b6108328161081f565b82525050565b600060208201905061084d6000830184610829565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061088382610858565b9050919050565b61089381610878565b811461089e57600080fd5b50565b6000813590506108b08161088a565b92915050565b6000602082840312156108cc576108cb610853565b5b60006108da848285016108a1565b91505092915050565b6000819050919050565b60006109086109036108fe84610858565b6108e3565b610858565b9050919050565b600061091a826108ed565b9050919050565b600061092c8261090f565b9050919050565b61093c81610921565b82525050565b60006020820190506109576000830184610933565b92915050565b61096681610878565b82525050565b6000602082019050610981600083018461095d565b92915050565b6109908161081f565b811461099b57600080fd5b50565b6000813590506109ad81610987565b92915050565b6000602082840312156109c9576109c8610853565b5b60006109d78482850161099e565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610a27601b836109e0565b9150610a32826109f1565b602082019050919050565b60006020820190508181036000830152610a5681610a1a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a978261081f565b9150610aa28361081f565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610ad757610ad6610a5d565b5b828201905092915050565b600081519050610af181610987565b92915050565b600060208284031215610b0d57610b0c610853565b5b6000610b1b84828501610ae2565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610b5e8261081f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610b9157610b90610a5d565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610be6600083610bcb565b9150610bf182610bd6565b600082019050919050565b6000610c0782610bd9565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610c47600b836109e0565b9150610c5282610c11565b602082019050919050565b60006020820190508181036000830152610c7681610c3a565b9050919050565b6000610c888261081f565b9150610c938361081f565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610ccc57610ccb610a5d565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610d118261081f565b9150610d1c8361081f565b925082610d2c57610d2b610cd7565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610d5681610d37565b8114610d6157600080fd5b50565b600081519050610d7381610d4d565b92915050565b6000819050919050565b610d8c81610d79565b8114610d9757600080fd5b50565b600081519050610da981610d83565b92915050565b600080600080600060a08688031215610dcb57610dca610853565b5b6000610dd988828901610d64565b9550506020610dea88828901610d9a565b9450506040610dfb88828901610ae2565b9350506060610e0c88828901610ae2565b9250506080610e1d88828901610d64565b9150509295509295909350565b6000610e3582610d79565b9150610e4083610d79565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610e7f57610e7e610a5d565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610ebc57610ebb610a5d565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610ef957610ef8610a5d565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610f3657610f35610a5d565b5b82820290509291505056fea264697066735822122008561c015a6b35046559f207b8fbbdbe280ea6afe4ee0102f3ca13d1177667fc64736f6c63430008080033",
  "deployedBytecode": "0x60806040526004361061007f5760003560e01c8063741bef1a1161004e578063741bef1a14610135578063b60d428814610160578063dba6335f1461016a578063dc0d3dff146101955761008e565b80630d8e6e2c146100985780633ccfd60b146100c35780633e47d6f3146100cd5780636b69a5921461010a5761008e565b3661008e5761008c6101d2565b005b6100966101d2565b005b3480156100a457600080fd5b506100ad61030c565b6040516100ba9190610838565b60405180910390f35b6100cb6103aa565b005b3480156100d957600080fd5b506100f460048036038101906100ef91906108b6565b6105ec565b6040516101019190610838565b60405180910390f35b34801561011657600080fd5b5061011f610604565b60405161012c9190610838565b60405180910390f35b34801561014157600080fd5b5061014a610611565b6040516101579190610942565b60405180910390f35b6101686101d2565b005b34801561017657600080fd5b5061017f610637565b60405161018c919061096c565b60405180910390f35b3480156101a157600080fd5b506101bc60048036038101906101b791906109b3565b61065d565b6040516101c9919061096c565b60405180910390f35b6802b5e3af16b1880000610211600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461069c90919063ffffffff16565b1015610252576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024990610a3d565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102a09190610a8c565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600080738a753747a1fa494ec906ce90e9f37563a8af630e90508073ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b15801561036c57600080fd5b505afa158015610380573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103a49190610af7565b91505090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610431576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156104dc5760006001828154811061045757610456610b24565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806104d490610b53565b915050610434565b50600067ffffffffffffffff8111156104f8576104f7610b9c565b5b6040519080825280602002602001820160405280156105265781602001602082028036833780820191505090505b506001908051906020019061053c929190610778565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161056390610bfc565b60006040518083038185875af1925050503d80600081146105a0576040519150601f19603f3d011682016040523d82523d6000602084013e6105a5565b606091505b50509050806105e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e090610c5d565b60405180910390fd5b50565b60006020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001818154811061066d57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806106a8836106d8565b90506000670de0b6b3a764000085836106c19190610c7d565b6106cb9190610d06565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561072157600080fd5b505afa158015610735573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107599190610daf565b5050509150506402540be400816107709190610e2a565b915050919050565b8280548282559060005260206000209081019282156107f1579160200282015b828111156107f05782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610798565b5b5090506107fe9190610802565b5090565b5b8082111561081b576000816000905550600101610803565b5090565b6000819050919050565b6108328161081f565b82525050565b600060208201905061084d6000830184610829565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061088382610858565b9050919050565b61089381610878565b811461089e57600080fd5b50565b6000813590506108b08161088a565b92915050565b6000602082840312156108cc576108cb610853565b5b60006108da848285016108a1565b91505092915050565b6000819050919050565b60006109086109036108fe84610858565b6108e3565b610858565b9050919050565b600061091a826108ed565b9050919050565b600061092c8261090f565b9050919050565b61093c81610921565b82525050565b60006020820190506109576000830184610933565b92915050565b61096681610878565b82525050565b6000602082019050610981600083018461095d565b92915050565b6109908161081f565b811461099b57600080fd5b50565b6000813590506109ad81610987565b92915050565b6000602082840312156109c9576109c8610853565b5b60006109d78482850161099e565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610a27601b836109e0565b9150610a32826109f1565b602082019050919050565b60006020820190508181036000830152610a5681610a1a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a978261081f565b9150610aa28361081f565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610ad757610ad6610a5d565b5b828201905092915050565b600081519050610af181610987565b92915050565b600060208284031215610b0d57610b0c610853565b5b6000610b1b84828501610ae2565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610b5e8261081f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610b9157610b90610a5d565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610be6600083610bcb565b9150610bf182610bd6565b600082019050919050565b6000610c0782610bd9565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610c47600b836109e0565b9150610c5282610c11565b602082019050919050565b60006020820190508181036000830152610c7681610c3a565b9050919050565b6000610c888261081f565b9150610c938361081f565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610ccc57610ccb610a5d565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610d118261081f565b9150610d1c8361081f565b925082610d2c57610d2b610cd7565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610d5681610d37565b8114610d6157600080fd5b50565b600081519050610d7381610d4d565b92915050565b6000819050919050565b610d8c81610d79565b8114610d9757600080fd5b50565b600081519050610da981610d83565b92915050565b600080600080600060a08688031215610dcb57610dca610853565b5b6000610dd988828901610d64565b9550506020610dea88828901610d9a565b9450506040610dfb88828901610ae2565b9350506060610e0c88828901610ae2565b9250506080610e1d88828901610d64565b9150509295509295909350565b6000610e3582610d79565b9150610e4083610d79565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610e7f57610e7e610a5d565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610ebc57610ebb610a5d565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610ef957610ef8610a5d565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610f3657610f35610a5d565b5b82820290509291505056fea264697066735822122008561c015a6b35046559f207b8fbbdbe280ea6afe4ee0102f3ca13d1177667fc64736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 58,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 61,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 63,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "i_owner",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 73,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}