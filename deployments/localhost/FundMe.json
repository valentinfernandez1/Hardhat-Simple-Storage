{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVersion",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "transactionHash": "0xbfe1cd453b4451658da3553b7e87c41d526e972bef10193c9424cca80f6117f2",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "948863",
    "logsBloom": "0x
    "blockHash": "0x03b2c382b91e3ae3763f1e2e4d2bca75edd72d996209820d85b49d1667f7ea69",
    "transactionHash": "0xbfe1cd453b4451658da3553b7e87c41d526e972bef10193c9424cca80f6117f2",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "948863",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "a03ee95980dc0c7aca51d10d19d8b6d1",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__NotOwner();\\n\\n/* @title A contract for crowd funding\\n* @author: Vale\\n *  @notice This contract is to demo a sample fundion contract \\n *  @dev this implements price feed as our library\\n */  \\n\\ncontract FundMe {\\n    //Tipe Declarations\\n    using PriceConverter for uint256;\\n\\n    //state Variables\\n    mapping(address => uint256) public addressToAmountFunded;\\n    address[] public funders;\\n\\n    // Could we make this constant?  /* hint: no! We should make it immutable! */\\n    address public /* immutable */ i_owner;\\n    uint256 public constant MINIMUM_USD = 50 * 10 ** 18;\\n    \\n    AggregatorV3Interface public priceFeed;\\n\\n    //Modifiers\\n    modifier onlyOwner {\\n        // require(msg.sender == owner);\\n        if (msg.sender != i_owner) revert FundMe__NotOwner();\\n        _;\\n    } \\n\\n/*     receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    } */\\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    function fund() public payable {\\n        require(msg.value.getConversionRate(priceFeed) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        addressToAmountFunded[msg.sender] += msg.value;\\n        funders.push(msg.sender);\\n    }\\n    \\n    function getVersion() public view returns (uint256){\\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(0x8A753747A1Fa494EC906cE90E9f37563A8AF630e);\\n        return priceFeed.version();\\n    }\\n    \\n\\n    \\n    function withdraw() payable onlyOwner public {\\n        for (uint256 funderIndex=0; funderIndex < funders.length; funderIndex++){\\n            address funder = funders[funderIndex];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n        funders = new address[](0);\\n        // // transfer\\n        // payable(msg.sender).transfer(address(this).balance);\\n        // // send\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"Send failed\\\");\\n        // call\\n        (bool callSuccess, ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n    // Explainer from: https://solidity-by-example.org/fallback/\\n    // Ether is sent to contract\\n    //      is msg.data empty?\\n    //          /   \\\\ \\n    //         yes  no\\n    //         /     \\\\\\n    //    receive()?  fallback() \\n    //     /   \\\\ \\n    //   yes   no\\n    //  /        \\\\\\n    //receive()  fallback()\\n\\n\\n\\n}\",\"keccak256\":\"0x41a154ccc9b7569ce2ea85d78c0b662b07ea518c008c3a9bae725183769c977c\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"pragma solidity ^0.8.8;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\n// Why is this a library and not abstract?\\r\\n// Why not an interface?\\r\\nlibrary PriceConverter {\\r\\n    // We could make this public, but then we'd have to deploy it\\r\\n    function getPrice(AggregatorV3Interface priceFeed)\\r\\n        internal\\r\\n        view\\r\\n        returns (uint256)\\r\\n    {\\r\\n        // Rinkeby ETH / USD Address\\r\\n        // https://docs.chain.link/docs/ethereum-addresses/\\r\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\r\\n        // ETH/USD rate in 18 digit\\r\\n        return uint256(answer * 10000000000);\\r\\n    }\\r\\n\\r\\n    // 1000000000\\r\\n    function getConversionRate(\\r\\n        uint256 ethAmount,\\r\\n        AggregatorV3Interface priceFeed\\r\\n    ) internal view returns (uint256) {\\r\\n        uint256 ethPrice = getPrice(priceFeed);\\r\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\r\\n        // the actual ETH/USD conversation rate, after adjusting the extra 0s.\\r\\n        return ethAmountInUsd;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x9530997691c2a03847df08e479851b2443268c919683bef3bdb92c8f4b713b51\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620010cb380380620010cb83398181016040528101906200003791906200012a565b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200015c565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000f282620000c5565b9050919050565b6200010481620000e5565b81146200011057600080fd5b50565b6000815190506200012481620000f9565b92915050565b600060208284031215620001435762000142620000c0565b5b6000620001538482850162000113565b91505092915050565b610f5f806200016c6000396000f3fe60806040526004361061007b5760003560e01c8063741bef1a1161004e578063741bef1a1461011d578063b60d428814610148578063dba6335f14610152578063dc0d3dff1461017d5761007b565b80630d8e6e2c146100805780633ccfd60b146100ab5780633e47d6f3146100b55780636b69a592146100f2575b600080fd5b34801561008c57600080fd5b506100956101ba565b6040516100a29190610820565b60405180910390f35b6100b3610258565b005b3480156100c157600080fd5b506100dc60048036038101906100d7919061089e565b61049a565b6040516100e99190610820565b60405180910390f35b3480156100fe57600080fd5b506101076104b2565b6040516101149190610820565b60405180910390f35b34801561012957600080fd5b506101326104bf565b60405161013f919061092a565b60405180910390f35b6101506104e5565b005b34801561015e57600080fd5b5061016761061f565b6040516101749190610954565b60405180910390f35b34801561018957600080fd5b506101a4600480360381019061019f919061099b565b610645565b6040516101b19190610954565b60405180910390f35b600080738a753747a1fa494ec906ce90e9f37563a8af630e90508073ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b15801561021a57600080fd5b505afa15801561022e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061025291906109dd565b91505090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102df576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60018054905081101561038a5760006001828154811061030557610304610a0a565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061038290610a68565b9150506102e2565b50600067ffffffffffffffff8111156103a6576103a5610ab1565b5b6040519080825280602002602001820160405280156103d45781602001602082028036833780820191505090505b50600190805190602001906103ea929190610760565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161041190610b11565b60006040518083038185875af1925050503d806000811461044e576040519150601f19603f3d011682016040523d82523d6000602084013e610453565b606091505b5050905080610497576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048e90610b83565b60405180910390fd5b50565b60006020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6802b5e3af16b1880000610524600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461068490919063ffffffff16565b1015610565576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055c90610bef565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105b39190610c0f565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001818154811061065557600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080610690836106c0565b90506000670de0b6b3a764000085836106a99190610c65565b6106b39190610cee565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561070957600080fd5b505afa15801561071d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107419190610d97565b5050509150506402540be400816107589190610e12565b915050919050565b8280548282559060005260206000209081019282156107d9579160200282015b828111156107d85782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610780565b5b5090506107e691906107ea565b5090565b5b808211156108035760008160009055506001016107eb565b5090565b6000819050919050565b61081a81610807565b82525050565b60006020820190506108356000830184610811565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061086b82610840565b9050919050565b61087b81610860565b811461088657600080fd5b50565b60008135905061089881610872565b92915050565b6000602082840312156108b4576108b361083b565b5b60006108c284828501610889565b91505092915050565b6000819050919050565b60006108f06108eb6108e684610840565b6108cb565b610840565b9050919050565b6000610902826108d5565b9050919050565b6000610914826108f7565b9050919050565b61092481610909565b82525050565b600060208201905061093f600083018461091b565b92915050565b61094e81610860565b82525050565b60006020820190506109696000830184610945565b92915050565b61097881610807565b811461098357600080fd5b50565b6000813590506109958161096f565b92915050565b6000602082840312156109b1576109b061083b565b5b60006109bf84828501610986565b91505092915050565b6000815190506109d78161096f565b92915050565b6000602082840312156109f3576109f261083b565b5b6000610a01848285016109c8565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a7382610807565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610aa657610aa5610a39565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610afb600083610ae0565b9150610b0682610aeb565b600082019050919050565b6000610b1c82610aee565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610b6d600b83610b26565b9150610b7882610b37565b602082019050919050565b60006020820190508181036000830152610b9c81610b60565b9050919050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610bd9601b83610b26565b9150610be482610ba3565b602082019050919050565b60006020820190508181036000830152610c0881610bcc565b9050919050565b6000610c1a82610807565b9150610c2583610807565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610c5a57610c59610a39565b5b828201905092915050565b6000610c7082610807565b9150610c7b83610807565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610cb457610cb3610a39565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610cf982610807565b9150610d0483610807565b925082610d1457610d13610cbf565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610d3e81610d1f565b8114610d4957600080fd5b50565b600081519050610d5b81610d35565b92915050565b6000819050919050565b610d7481610d61565b8114610d7f57600080fd5b50565b600081519050610d9181610d6b565b92915050565b600080600080600060a08688031215610db357610db261083b565b5b6000610dc188828901610d4c565b9550506020610dd288828901610d82565b9450506040610de3888289016109c8565b9350506060610df4888289016109c8565b9250506080610e0588828901610d4c565b9150509295509295909350565b6000610e1d82610d61565b9150610e2883610d61565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610e6757610e66610a39565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610ea457610ea3610a39565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610ee157610ee0610a39565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610f1e57610f1d610a39565b5b82820290509291505056fea264697066735822122060adaafa2b26a83661ce7e55e8968f8d41eb816a06a040c516d969d45429fcf264736f6c63430008080033",
  "deployedBytecode": "0x60806040526004361061007b5760003560e01c8063741bef1a1161004e578063741bef1a1461011d578063b60d428814610148578063dba6335f14610152578063dc0d3dff1461017d5761007b565b80630d8e6e2c146100805780633ccfd60b146100ab5780633e47d6f3146100b55780636b69a592146100f2575b600080fd5b34801561008c57600080fd5b506100956101ba565b6040516100a29190610820565b60405180910390f35b6100b3610258565b005b3480156100c157600080fd5b506100dc60048036038101906100d7919061089e565b61049a565b6040516100e99190610820565b60405180910390f35b3480156100fe57600080fd5b506101076104b2565b6040516101149190610820565b60405180910390f35b34801561012957600080fd5b506101326104bf565b60405161013f919061092a565b60405180910390f35b6101506104e5565b005b34801561015e57600080fd5b5061016761061f565b6040516101749190610954565b60405180910390f35b34801561018957600080fd5b506101a4600480360381019061019f919061099b565b610645565b6040516101b19190610954565b60405180910390f35b600080738a753747a1fa494ec906ce90e9f37563a8af630e90508073ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b15801561021a57600080fd5b505afa15801561022e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061025291906109dd565b91505090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102df576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60018054905081101561038a5760006001828154811061030557610304610a0a565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061038290610a68565b9150506102e2565b50600067ffffffffffffffff8111156103a6576103a5610ab1565b5b6040519080825280602002602001820160405280156103d45781602001602082028036833780820191505090505b50600190805190602001906103ea929190610760565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161041190610b11565b60006040518083038185875af1925050503d806000811461044e576040519150601f19603f3d011682016040523d82523d6000602084013e610453565b606091505b5050905080610497576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048e90610b83565b60405180910390fd5b50565b60006020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6802b5e3af16b1880000610524600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461068490919063ffffffff16565b1015610565576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055c90610bef565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105b39190610c0f565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001818154811061065557600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080610690836106c0565b90506000670de0b6b3a764000085836106a99190610c65565b6106b39190610cee565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561070957600080fd5b505afa15801561071d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107419190610d97565b5050509150506402540be400816107589190610e12565b915050919050565b8280548282559060005260206000209081019282156107d9579160200282015b828111156107d85782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610780565b5b5090506107e691906107ea565b5090565b5b808211156108035760008160009055506001016107eb565b5090565b6000819050919050565b61081a81610807565b82525050565b60006020820190506108356000830184610811565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061086b82610840565b9050919050565b61087b81610860565b811461088657600080fd5b50565b60008135905061089881610872565b92915050565b6000602082840312156108b4576108b361083b565b5b60006108c284828501610889565b91505092915050565b6000819050919050565b60006108f06108eb6108e684610840565b6108cb565b610840565b9050919050565b6000610902826108d5565b9050919050565b6000610914826108f7565b9050919050565b61092481610909565b82525050565b600060208201905061093f600083018461091b565b92915050565b61094e81610860565b82525050565b60006020820190506109696000830184610945565b92915050565b61097881610807565b811461098357600080fd5b50565b6000813590506109958161096f565b92915050565b6000602082840312156109b1576109b061083b565b5b60006109bf84828501610986565b91505092915050565b6000815190506109d78161096f565b92915050565b6000602082840312156109f3576109f261083b565b5b6000610a01848285016109c8565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a7382610807565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610aa657610aa5610a39565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610afb600083610ae0565b9150610b0682610aeb565b600082019050919050565b6000610b1c82610aee565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610b6d600b83610b26565b9150610b7882610b37565b602082019050919050565b60006020820190508181036000830152610b9c81610b60565b9050919050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610bd9601b83610b26565b9150610be482610ba3565b602082019050919050565b60006020820190508181036000830152610c0881610bcc565b9050919050565b6000610c1a82610807565b9150610c2583610807565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610c5a57610c59610a39565b5b828201905092915050565b6000610c7082610807565b9150610c7b83610807565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610cb457610cb3610a39565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610cf982610807565b9150610d0483610807565b925082610d1457610d13610cbf565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610d3e81610d1f565b8114610d4957600080fd5b50565b600081519050610d5b81610d35565b92915050565b6000819050919050565b610d7481610d61565b8114610d7f57600080fd5b50565b600081519050610d9181610d6b565b92915050565b600080600080600060a08688031215610db357610db261083b565b5b6000610dc188828901610d4c565b9550506020610dd288828901610d82565b9450506040610de3888289016109c8565b9350506060610df4888289016109c8565b9250506080610e0588828901610d4c565b9150509295509295909350565b6000610e1d82610d61565b9150610e2883610d61565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610e6757610e66610a39565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610ea457610ea3610a39565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610ee157610ee0610a39565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610f1e57610f1d610a39565b5b82820290509291505056fea264697066735822122060adaafa2b26a83661ce7e55e8968f8d41eb816a06a040c516d969d45429fcf264736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 58,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 61,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 63,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "i_owner",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 73,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}